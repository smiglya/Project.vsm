# Generated by Django 4.2.9 on 2025-06-26 07:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Depot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Уникальное название депо",
                        max_length=255,
                        unique=True,
                        verbose_name="Название депо",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Город или регион расположения депо",
                        max_length=255,
                        null=True,
                        verbose_name="Местоположение",
                    ),
                ),
                (
                    "contact_info",
                    models.CharField(
                        blank=True,
                        help_text="Email или телефон для связи с депо",
                        max_length=255,
                        null=True,
                        verbose_name="Контактная информация",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "Депо",
                "verbose_name_plural": "Депо",
                "db_table": "mileage_calculator_depot",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Train",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Уникальное название поезда",
                        max_length=255,
                        unique=True,
                        verbose_name="Название поезда",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Ласточка", "Ласточка"),
                            ("Финист", "Финист"),
                            ("Сапсан", "Сапсан"),
                        ],
                        help_text="Тип электропоезда",
                        max_length=50,
                        verbose_name="Тип поезда",
                    ),
                ),
                (
                    "is_manual_mileage",
                    models.BooleanField(
                        default=False,
                        help_text="Флаг ручного ввода пробега (если пробег не приходит автоматически)",
                        verbose_name="Ручной ввод пробега",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Активен ли поезд в системе",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "depot",
                    models.ForeignKey(
                        help_text="Депо приписки поезда",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trains",
                        to="mileage_calculator.depot",
                        verbose_name="Депо",
                    ),
                ),
            ],
            options={
                "verbose_name": "Поезд",
                "verbose_name_plural": "Поезда",
                "db_table": "mileage_calculator_train",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TrainDailyRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_date",
                    models.DateField(
                        help_text="Дата записи данных", verbose_name="Дата записи"
                    ),
                ),
                (
                    "total_mileage",
                    models.BigIntegerField(
                        help_text="Общий пробег поезда в километрах",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Общий пробег",
                    ),
                ),
                (
                    "daily_mileage",
                    models.IntegerField(
                        help_text="Дневной пробег в километрах",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Дневной пробег",
                    ),
                ),
                (
                    "last_to_mileage",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Километраж на момент последнего технического обслуживания",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Пробег на момент последнего ТО",
                    ),
                ),
                (
                    "last_to_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата последнего ТО"
                    ),
                ),
                (
                    "last_to_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ТО-1", "ТО-1"),
                            ("ТО-2", "ТО-2"),
                            ("ТО-3", "ТО-3"),
                            ("I1", "I1"),
                            ("I2", "I2"),
                            ("I3", "I3"),
                            ("I4", "I4"),
                            ("I5", "I5"),
                            ("I6", "I6"),
                            ("R1", "R1"),
                            ("R2", "R2"),
                            ("R3", "R3"),
                            ("R4", "R4"),
                            ("ТО-L", "ТО-L"),
                            ("ТО-N", "ТО-N"),
                            ("IS510", "IS510"),
                            ("IS520", "IS520"),
                            ("IS530", "IS530"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Вид последнего ТО",
                    ),
                ),
                (
                    "next_to_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ТО-1", "ТО-1"),
                            ("ТО-2", "ТО-2"),
                            ("ТО-3", "ТО-3"),
                            ("I1", "I1"),
                            ("I2", "I2"),
                            ("I3", "I3"),
                            ("I4", "I4"),
                            ("I5", "I5"),
                            ("I6", "I6"),
                            ("R1", "R1"),
                            ("R2", "R2"),
                            ("R3", "R3"),
                            ("R4", "R4"),
                            ("ТО-L", "ТО-L"),
                            ("ТО-N", "ТО-N"),
                            ("IS510", "IS510"),
                            ("IS520", "IS520"),
                            ("IS530", "IS530"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Вид следующего ТО",
                    ),
                ),
                (
                    "planned_to_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Плановая дата ТО"
                    ),
                ),
                (
                    "last_block_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата последнего блока"
                    ),
                ),
                (
                    "last_kp_measure_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Дата последних измерений КП",
                    ),
                ),
                (
                    "last_kp_date",
                    models.DateField(
                        blank=True,
                        help_text="Дата последнего безотцепочного замера колесных пар",
                        null=True,
                        verbose_name="Дата последнего БЗКП",
                    ),
                ),
                (
                    "inspection_counter",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Счетчик инспекций",
                    ),
                ),
                (
                    "to_l_mileage",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Используется для поездов типа Сапсан",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Пробег для ТО-L",
                    ),
                ),
                (
                    "to_n_mileage",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Используется для поездов типа Сапсан",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Пробег для ТО-N",
                    ),
                ),
                (
                    "is510_mileage",
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Километраж IS510",
                    ),
                ),
                (
                    "is520_mileage",
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Километраж IS520",
                    ),
                ),
                (
                    "is530_mileage",
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Километраж IS530",
                    ),
                ),
                (
                    "mileage_since_to",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Автоматически рассчитываемое поле",
                        null=True,
                        verbose_name="Пробег с последнего ТО",
                    ),
                ),
                (
                    "mileage_to_to",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Автоматически рассчитываемое поле",
                        null=True,
                        verbose_name="Пробег до следующего ТО",
                    ),
                ),
                (
                    "days_since_to",
                    models.IntegerField(
                        blank=True,
                        help_text="Автоматически рассчитываемое поле",
                        null=True,
                        verbose_name="Дней с последнего ТО",
                    ),
                ),
                (
                    "avg_mileage",
                    models.FloatField(
                        blank=True,
                        help_text="Средний пробег за 3 месяца",
                        null=True,
                        verbose_name="Средний пробег",
                    ),
                ),
                (
                    "manual_indicator_train",
                    models.BooleanField(
                        default=False,
                        help_text="Поезд на контроле (была замена планового вида ремонта)",
                        verbose_name="Ручная индикация поезда",
                    ),
                ),
                (
                    "manual_indicator_next_to",
                    models.BooleanField(
                        default=False,
                        help_text="Ручная индикация для инспекций I3.I4.I5.I6.R1.R2.R3.R4",
                        verbose_name="Ручная индикация следующего ТО",
                    ),
                ),
                (
                    "indicator_color",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Цветовой индикатор",
                    ),
                ),
                (
                    "mileage_indicator_color",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Индикатор по пробегу",
                    ),
                ),
                (
                    "next_to_indicator_color",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Индикатор следующего ТО",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "train",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_records",
                        to="mileage_calculator.train",
                        verbose_name="Поезд",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ежедневная запись",
                "verbose_name_plural": "Ежедневные записи",
                "db_table": "mileage_calculator_traindailyrecord",
                "ordering": ["-record_date", "train__name"],
                "indexes": [
                    models.Index(
                        fields=["record_date"], name="mileage_cal_record__207b53_idx"
                    ),
                    models.Index(
                        fields=["train", "record_date"],
                        name="mileage_cal_train_i_31736d_idx",
                    ),
                    models.Index(
                        fields=["train", "-record_date"],
                        name="mileage_cal_train_i_e27b64_idx",
                    ),
                    models.Index(
                        fields=["last_to_date"], name="mileage_cal_last_to_a685af_idx"
                    ),
                    models.Index(
                        fields=["planned_to_date"],
                        name="mileage_cal_planned_3aab04_idx",
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="traindailyrecord",
            constraint=models.UniqueConstraint(
                fields=("train", "record_date"), name="unique_train_record_date"
            ),
        ),
        migrations.AddIndex(
            model_name="train",
            index=models.Index(fields=["type"], name="mileage_cal_type_1ba1b2_idx"),
        ),
        migrations.AddIndex(
            model_name="train",
            index=models.Index(fields=["depot"], name="mileage_cal_depot_i_306edb_idx"),
        ),
        migrations.AddIndex(
            model_name="train",
            index=models.Index(
                fields=["is_manual_mileage"], name="mileage_cal_is_manu_5ad2e3_idx"
            ),
        ),
    ]
